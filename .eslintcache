[{"D:\\_W_robocie\\Gadget\\Żabik_3\\Gadget---PR\\src\\App.js":"1","D:\\_W_robocie\\Gadget\\Żabik_3\\Gadget---PR\\src\\components\\Dashboards\\ServiceHeader.js":"2","D:\\_W_robocie\\Gadget\\Żabik_3\\Gadget---PR\\src\\components\\Dashboards\\MachineDetails\\Chart.js":"3","D:\\_W_robocie\\Gadget\\Żabik_3\\Gadget---PR\\src\\components\\Dashboards\\Service.js":"4","D:\\_W_robocie\\Gadget\\Żabik_3\\Gadget---PR\\src\\components\\Dashboards\\MachineDetails\\MachineTile\\MachineTile.js":"5","D:\\_W_robocie\\Gadget\\Żabik_3\\Gadget---PR\\src\\index.js":"6","D:\\_W_robocie\\Gadget\\Żabik_3\\Gadget---PR\\src\\components\\Dashboards\\ServiceMobile.js":"7","D:\\_W_robocie\\Gadget\\Żabik_3\\Gadget---PR\\src\\Hooks.js":"8","D:\\_W_robocie\\Gadget\\Żabik_3\\Gadget---PR\\src\\components\\Home\\Main.js":"9","D:\\_W_robocie\\Gadget\\Żabik_3\\Gadget---PR\\src\\config.js":"10","D:\\_W_robocie\\Gadget\\Żabik_3\\Gadget---PR\\src\\components\\Dashboards\\MachineDetails\\MetricTile.js":"11","D:\\_W_robocie\\Gadget\\Żabik_3\\Gadget---PR\\src\\components\\Dashboards\\Main.js":"12","D:\\_W_robocie\\Gadget\\Żabik_3\\Gadget---PR\\src\\utils\\API.js":"13","D:\\_W_robocie\\Gadget\\Żabik_3\\Gadget---PR\\src\\components\\Dashboards\\MachineDetails\\MachineBar\\MachineBar.js":"14","D:\\_W_robocie\\Gadget\\Żabik_3\\Gadget---PR\\src\\components\\Dashboards\\MachineDetails\\Label.js":"15"},{"size":1252,"mtime":1607351855503,"results":"16","hashOfConfig":"17"},{"size":929,"mtime":1610035798400,"results":"18","hashOfConfig":"17"},{"size":2204,"mtime":1607351855505,"results":"19","hashOfConfig":"17"},{"size":1224,"mtime":1610032351710,"results":"20","hashOfConfig":"17"},{"size":1523,"mtime":1610032357197,"results":"21","hashOfConfig":"17"},{"size":684,"mtime":1607351855515,"results":"22","hashOfConfig":"17"},{"size":676,"mtime":1607351855510,"results":"23","hashOfConfig":"17"},{"size":471,"mtime":1607351855504,"results":"24","hashOfConfig":"17"},{"size":3089,"mtime":1610111674407,"results":"25","hashOfConfig":"17"},{"size":266,"mtime":1609762630064,"results":"26","hashOfConfig":"17"},{"size":635,"mtime":1607351855508,"results":"27","hashOfConfig":"17"},{"size":6496,"mtime":1610111749175,"results":"28","hashOfConfig":"17"},{"size":971,"mtime":1609762476270,"results":"29","hashOfConfig":"17"},{"size":943,"mtime":1607351855506,"results":"30","hashOfConfig":"17"},{"size":279,"mtime":1610030060870,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34"},"oxmjk5",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\_W_robocie\\Gadget\\Żabik_3\\Gadget---PR\\src\\App.js",["68"],"import { BrowserRouter, Switch, Route } from 'react-router-dom';\r\nimport Home from './components/Home/Main';\r\nimport Dashboards from './components/Dashboards/Main';\r\n// import Inbox from './components/Inbox/Main';\r\n// import Products from './components/Products/Main';\r\n// import Invoices from './components/Invoices/Main';\r\nimport Header from './components/Header';\r\n// import Nav from './components/Nav';\r\nconst App = () => {\r\n  return (\r\n    <>\r\n      <Header />\r\n      <BrowserRouter>\r\n        <div className=\"content-wrapper\">\r\n          {/* <Nav /> */}\r\n          <section className=\"content\">\r\n            <Route exact path=\"/\">\r\n              <Home />\r\n            </Route>\r\n            <Route path=\"/:machineName\">\r\n              <Dashboards />\r\n            </Route>\r\n            {/* <Switch>\r\n              <Route exact path=\"/\" component={Home} />\r\n              <Route path=\"/dashboards\" component={Dashboards} />\r\n              <Route exact path=\"/inbox\" component={Inbox} />\r\n              <Route path=\"/products\" component={Products} />\r\n              <Route exact path=\"/invoices\" component={Invoices} />\r\n            </Switch> */}\r\n          </section>\r\n        </div>\r\n      </BrowserRouter>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","D:\\_W_robocie\\Gadget\\Żabik_3\\Gadget---PR\\src\\components\\Dashboards\\ServiceHeader.js",[],"D:\\_W_robocie\\Gadget\\Żabik_3\\Gadget---PR\\src\\components\\Dashboards\\MachineDetails\\Chart.js",[],["69","70"],"D:\\_W_robocie\\Gadget\\Żabik_3\\Gadget---PR\\src\\components\\Dashboards\\Service.js",[],"D:\\_W_robocie\\Gadget\\Żabik_3\\Gadget---PR\\src\\components\\Dashboards\\MachineDetails\\MachineTile\\MachineTile.js",["71"],"D:\\_W_robocie\\Gadget\\Żabik_3\\Gadget---PR\\src\\index.js",[],["72","73"],"D:\\_W_robocie\\Gadget\\Żabik_3\\Gadget---PR\\src\\components\\Dashboards\\ServiceMobile.js",[],["74","75"],"D:\\_W_robocie\\Gadget\\Żabik_3\\Gadget---PR\\src\\Hooks.js",[],"D:\\_W_robocie\\Gadget\\Żabik_3\\Gadget---PR\\src\\components\\Home\\Main.js",["76","77","78"],"D:\\_W_robocie\\Gadget\\Żabik_3\\Gadget---PR\\src\\config.js",[],"D:\\_W_robocie\\Gadget\\Żabik_3\\Gadget---PR\\src\\components\\Dashboards\\MachineDetails\\MetricTile.js",["79"],"import React from 'react'\r\nimport discIcon from './images/hard_disc.png';\r\nimport serviceIcon from './images/service.png';\r\nimport './MachineDetails.css'\r\n\r\nconst MetricTile = (props)=>{\r\n    const icons = {\r\n        \"service\":serviceIcon,\r\n        \"disc\":discIcon\r\n    }\r\n    return (\r\n        <div className=\"metric-tile\">\r\n                <span className=\"metric-name\">{props.children}</span>\r\n                <div className=\"icon-metric\">\r\n                    <img width={22} src ={icons[props.type]}/>\r\n                    <span>{props.values}</span>\r\n                </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MetricTile;","D:\\_W_robocie\\Gadget\\Żabik_3\\Gadget---PR\\src\\components\\Dashboards\\Main.js",["80","81","82","83","84","85","86","87","88"],"import React, { useState, useEffect, useContext } from \"react\";\r\nimport Pagination from \"react-js-pagination\";\r\nimport Service from \"./Service\";\r\nimport ServiceMobile from \"./ServiceMobile\";\r\nimport ServiceHeader from \"./ServiceHeader\";\r\nimport MachineBar from \"./MachineDetails/MachineBar/MachineBar\";\r\nimport \"../Dashboards/MachineDetails/MachineDetails.css\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { useWindowSize } from \"../../Hooks\";\r\nimport { API } from \"../../utils/API\";\r\nimport { SignalRContext } from '../../utils/signalr-context'\r\n\r\nconst Dashboards = () => {\r\n  const windowSize = useWindowSize();\r\n  const { machineName } = useParams();\r\n  const [machineState, setMachineState] = useState([]);\r\n  const[hubConnection, setHubConnection] = useState(null);\r\n  const [services, setServices] = useState([]);\r\n  const [connectionState, setConnectionState] = useState(\"\");\r\n  const [machineAddress, setMachineAddress] = useState(\"\");\r\n  const [sortBy, setSortBy] = useState(\"\");\r\n  const connection = useContext(SignalRContext);\r\n\r\n  useEffect(() => {\r\n    API.fetchServicesList(machineName).then((response) => {\r\n        setHubConnection(connection);\r\n        setServices(response.data);\r\n    });\r\n  }, []);\r\n\r\n    useEffect(() => {\r\n      if (hubConnection !== null) {\r\n        hubConnection.on(\"ServiceStatusChanged\", (response) => {\r\n             if(response.agent ===machineName){\r\n                let updated = [...services];\r\n                let indexOfChangedService = updated.findIndex(x=>x.name ===response.name);\r\n                updated[indexOfChangedService].status = response.status;\r\n              setServices(updated);\r\n             }\r\n        });\r\n      }\r\n    }, [hubConnection]);\r\n\r\n\r\n    useEffect(() => {\r\n      API.fetchMachineList().then((response) => {\r\n        let ipAddress = response.data.filter((ms)=>ms.name == machineName)[0];\r\n          setMachineAddress(ipAddress.address);\r\n      });\r\n  }, []);\r\n\r\n\r\n    useEffect(() => {\r\n      if (hubConnection !== null) {\r\n          hubConnection.on(\"MachineHealthRecived\", (response) => {\r\n            if(response.agent ===machineName){\r\n              let updated = {};\r\n              updated.cpu = response.cpuPercentUsage;\r\n              updated.ram = Math.floor(100*(1-(response.memoryFree/response.memoryTotal)));\r\n              updated.disc = `${Math.floor(response.discOccupied)}/${Math.floor(response.discTotal)}`;\r\n              updated.services = `${response.servicesRunning}/${response.servicesCount}`;\r\n              setMachineState(updated);\r\n            }\r\n        });\r\n      }\r\n    }, [hubConnection]);\r\n\r\n  const servicesPerPage = 10;\r\n  const [activePage, setActivePage] = useState(1);\r\n\r\n  const handlePageChange = (pageNumber) => {\r\n    setActivePage(pageNumber);\r\n  };\r\n\r\n  // sorting\r\n  const handleSortingBy = (sortBy)=>{\r\n    setSortBy(sortBy);\r\n  }\r\n\r\n  // search bar\r\n\r\n  const [searchTerm, setSearchTerm] = useState(\"\");\r\n  const [searchResults, setSearchResults] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const results = services.filter((service) =>\r\n      service.name.toLowerCase().includes(searchTerm.toLowerCase())\r\n    );\r\n    setSearchResults(results);\r\n  }, [searchTerm]);\r\n  \r\n\r\n\r\n  const indexOfLastService = activePage * servicesPerPage;\r\n  const indexOfFirstService = indexOfLastService - servicesPerPage;\r\n  const currentServices = searchResults.slice(\r\n    indexOfFirstService,\r\n    indexOfLastService\r\n  );\r\n  const moreResults = searchResults.length > servicesPerPage;\r\n  if (windowSize <= 768) {\r\n    return (\r\n      <>\r\n        <div>\r\n          <div>\r\n            <MachineBar machine=\"nmv3\" address=\"127.0.01\" cpu={30} ram={20} disc=\"47/210\" services=\"23/98\"></MachineBar>\r\n\r\n          </div>\r\n          <ServiceHeader setSearchTerm={setSearchTerm} searchTerm={searchTerm} setActivePage={setActivePage} />\r\n\r\n          {currentServices && currentServices.length > 0 ? (\r\n            currentServices.map((service, index) => {\r\n              return (\r\n                //tutaj zamienilem hubConnection na connection ale takie przekazywanie polaczenia przez propsy nie jest potrzebne, teraz mozna uzywac useContext w komponentach\r\n                <ServiceMobile key={index} service={service} index={index} machineName={machineName} connection={connection} connectionState={connectionState} />\r\n              )\r\n            })\r\n          ) : (\r\n              <p className=\"warning-text\">No services detected</p>\r\n            )}\r\n\r\n          {moreResults && <Pagination\r\n            activePage={activePage}\r\n            itemsCountPerPage={servicesPerPage}\r\n            totalItemsCount={searchResults.length}\r\n            pageRangeDisplayed={3}\r\n            onChange={handlePageChange}\r\n            prevPageText=\"<\"\r\n            nextPageText=\">\"\r\n            firstPageText=\"..\"\r\n            lastPageText=\"..\"\r\n          />}\r\n        </div>\r\n        {moreResults && (\r\n          <Pagination\r\n            activePage={activePage}\r\n            itemsCountPerPage={servicesPerPage}\r\n            totalItemsCount={searchResults.length}\r\n            pageRangeDisplayed={3}\r\n            onChange={handlePageChange}\r\n            prevPageText=\"<\"\r\n            nextPageText=\">\"\r\n            firstPageText=\"..\"\r\n            lastPageText=\"..\"\r\n          />\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <MachineBar\r\n          machine={machineName}\r\n          address={machineAddress}\r\n          cpu={machineState.cpu}\r\n          ram={machineState.ram}\r\n          disc={machineState.disc}\r\n          services={machineState.services}\r\n        ></MachineBar>\r\n      </div>\r\n      <ServiceHeader\r\n        setSearchTerm={setSearchTerm}\r\n        searchTerm={searchTerm}\r\n        setActivePage={setActivePage}\r\n      />\r\n\r\n      {currentServices && currentServices.length > 0 ? (\r\n        currentServices.map((service, index) => {\r\n          return <Service key={index} service={service} index={index} />;\r\n        })\r\n      ) : (\r\n          <p className=\"warning-text\">No services detected</p>\r\n        )}\r\n\r\n      {moreResults && (\r\n        <Pagination\r\n          activePage={activePage}\r\n          itemsCountPerPage={servicesPerPage}\r\n          totalItemsCount={searchResults.length}\r\n          pageRangeDisplayed={3}\r\n          onChange={handlePageChange}\r\n          prevPageText=\"<\"\r\n          nextPageText=\">\"\r\n          firstPageText=\"..\"\r\n          lastPageText=\"..\"\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboards;\r\n","D:\\_W_robocie\\Gadget\\Żabik_3\\Gadget---PR\\src\\utils\\API.js",[],"D:\\_W_robocie\\Gadget\\Żabik_3\\Gadget---PR\\src\\components\\Dashboards\\MachineDetails\\MachineBar\\MachineBar.js",[],"D:\\_W_robocie\\Gadget\\Żabik_3\\Gadget---PR\\src\\components\\Dashboards\\MachineDetails\\Label.js",[],{"ruleId":"89","severity":1,"message":"90","line":1,"column":25,"nodeType":"91","messageId":"92","endLine":1,"endColumn":31},{"ruleId":"93","replacedBy":"94"},{"ruleId":"95","replacedBy":"96"},{"ruleId":"97","severity":1,"message":"98","line":20,"column":7,"nodeType":"99","endLine":20,"endColumn":14,"suggestions":"100"},{"ruleId":"93","replacedBy":"101"},{"ruleId":"95","replacedBy":"102"},{"ruleId":"93","replacedBy":"103"},{"ruleId":"95","replacedBy":"104"},{"ruleId":"97","severity":1,"message":"105","line":27,"column":8,"nodeType":"99","endLine":27,"endColumn":10,"suggestions":"106"},{"ruleId":"107","severity":1,"message":"108","line":40,"column":56,"nodeType":"109","messageId":"110","endLine":40,"endColumn":58},{"ruleId":"97","severity":1,"message":"111","line":52,"column":8,"nodeType":"99","endLine":52,"endColumn":40,"suggestions":"112"},{"ruleId":"113","severity":1,"message":"114","line":15,"column":21,"nodeType":"115","endLine":15,"endColumn":63},{"ruleId":"89","severity":1,"message":"116","line":19,"column":27,"nodeType":"91","messageId":"92","endLine":19,"endColumn":45},{"ruleId":"89","severity":1,"message":"117","line":21,"column":10,"nodeType":"91","messageId":"92","endLine":21,"endColumn":16},{"ruleId":"97","severity":1,"message":"118","line":29,"column":6,"nodeType":"99","endLine":29,"endColumn":8,"suggestions":"119"},{"ruleId":"97","severity":1,"message":"120","line":42,"column":8,"nodeType":"99","endLine":42,"endColumn":23,"suggestions":"121"},{"ruleId":"107","severity":1,"message":"108","line":47,"column":60,"nodeType":"109","messageId":"110","endLine":47,"endColumn":62},{"ruleId":"97","severity":1,"message":"122","line":50,"column":6,"nodeType":"99","endLine":50,"endColumn":8,"suggestions":"123"},{"ruleId":"97","severity":1,"message":"122","line":66,"column":8,"nodeType":"99","endLine":66,"endColumn":23,"suggestions":"124"},{"ruleId":"89","severity":1,"message":"125","line":76,"column":9,"nodeType":"91","messageId":"92","endLine":76,"endColumn":24},{"ruleId":"97","severity":1,"message":"126","line":90,"column":6,"nodeType":"99","endLine":90,"endColumn":18,"suggestions":"127"},"no-unused-vars","'Switch' is defined but never used.","Identifier","unusedVar","no-native-reassign",["128"],"no-negated-in-lhs",["129"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'machineTileState.show'. Either include it or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setMachineTileState' needs the current value of 'machineTileState.show'.","ArrayExpression",["130"],["128"],["129"],["128"],["129"],"React Hook useEffect has a missing dependency: 'connection'. Either include it or remove the dependency array.",["131"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useEffect has a missing dependency: 'machineListState.machines'. Either include it or remove the dependency array.",["132"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'setConnectionState' is assigned a value but never used.","'sortBy' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'connection' and 'machineName'. Either include them or remove the dependency array.",["133"],"React Hook useEffect has missing dependencies: 'machineName' and 'services'. Either include them or remove the dependency array.",["134"],"React Hook useEffect has a missing dependency: 'machineName'. Either include it or remove the dependency array.",["135"],["136"],"'handleSortingBy' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'services'. Either include it or remove the dependency array.",["137"],"no-global-assign","no-unsafe-negation",{"desc":"138","fix":"139"},{"desc":"140","fix":"141"},{"desc":"142","fix":"143"},{"desc":"144","fix":"145"},{"desc":"146","fix":"147"},{"desc":"148","fix":"149"},{"desc":"150","fix":"151"},{"desc":"152","fix":"153"},"Update the dependencies array to be: [machineTileState.show, props]",{"range":"154","text":"155"},"Update the dependencies array to be: [connection]",{"range":"156","text":"157"},"Update the dependencies array to be: [machineListState.hubConnection, machineListState.machines]",{"range":"158","text":"159"},"Update the dependencies array to be: [connection, machineName]",{"range":"160","text":"161"},"Update the dependencies array to be: [hubConnection, machineName, services]",{"range":"162","text":"163"},"Update the dependencies array to be: [machineName]",{"range":"164","text":"165"},"Update the dependencies array to be: [hubConnection, machineName]",{"range":"166","text":"167"},"Update the dependencies array to be: [searchTerm, services]",{"range":"168","text":"169"},[579,586],"[machineTileState.show, props]",[839,841],"[connection]",[1971,2003],"[machineListState.hubConnection, machineListState.machines]",[1226,1228],"[connection, machineName]",[1703,1718],"[hubConnection, machineName, services]",[1945,1947],"[machineName]",[2592,2607],"[hubConnection, machineName]",[3186,3198],"[searchTerm, services]"]