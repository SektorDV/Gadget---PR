[{"D:\\_W_robocie\\Gadget\\Żabik_3\\Gadget---PR\\src\\components\\Dashboards\\Main.js":"1","D:\\_W_robocie\\Gadget\\Żabik_3\\Gadget---PR\\src\\components\\Dashboards\\Service.js":"2","D:\\_W_robocie\\Gadget\\Żabik_3\\Gadget---PR\\src\\utils\\API.js":"3","D:\\_W_robocie\\Gadget\\Żabik_3\\Gadget---PR\\src\\index.js":"4","D:\\_W_robocie\\Gadget\\Żabik_3\\Gadget---PR\\src\\utils\\signalr-context.js":"5","D:\\_W_robocie\\Gadget\\Żabik_3\\Gadget---PR\\src\\App.js":"6","D:\\_W_robocie\\Gadget\\Żabik_3\\Gadget---PR\\src\\config.js":"7","D:\\_W_robocie\\Gadget\\Żabik_3\\Gadget---PR\\src\\components\\Home\\Main.js":"8","D:\\_W_robocie\\Gadget\\Żabik_3\\Gadget---PR\\src\\components\\Header.js":"9","D:\\_W_robocie\\Gadget\\Żabik_3\\Gadget---PR\\src\\components\\Dashboards\\MachineDetails\\MachineTile\\MachineTileMobile.js":"10","D:\\_W_robocie\\Gadget\\Żabik_3\\Gadget---PR\\src\\components\\Dashboards\\MachineDetails\\MachineBar\\MachineBar.js":"11","D:\\_W_robocie\\Gadget\\Żabik_3\\Gadget---PR\\src\\components\\Dashboards\\MachineDetails\\Chart.js":"12","D:\\_W_robocie\\Gadget\\Żabik_3\\Gadget---PR\\src\\components\\Dashboards\\MachineDetails\\MachineTile\\MachineTile.js":"13","D:\\_W_robocie\\Gadget\\Żabik_3\\Gadget---PR\\src\\components\\Dashboards\\Logs\\Logs.js":"14","D:\\_W_robocie\\Gadget\\Żabik_3\\Gadget---PR\\src\\reportWebVitals.js":"15","D:\\_W_robocie\\Gadget\\Żabik_3\\Gadget---PR\\src\\components\\Dashboards\\ServiceHeaderMobile.js":"16","D:\\_W_robocie\\Gadget\\Żabik_3\\Gadget---PR\\src\\components\\Dashboards\\RestartModal.js":"17","D:\\_W_robocie\\Gadget\\Żabik_3\\Gadget---PR\\src\\components\\LoginModal.js":"18"},{"size":6045,"mtime":1611251680859,"results":"19","hashOfConfig":"20"},{"size":2182,"mtime":1611256120786,"results":"21","hashOfConfig":"20"},{"size":2010,"mtime":1611139977473,"results":"22","hashOfConfig":"20"},{"size":684,"mtime":1607351855515,"results":"23","hashOfConfig":"20"},{"size":1098,"mtime":1610548016320,"results":"24","hashOfConfig":"20"},{"size":1337,"mtime":1610548016306,"results":"25","hashOfConfig":"20"},{"size":236,"mtime":1611584796532,"results":"26","hashOfConfig":"20"},{"size":3493,"mtime":1611250612273,"results":"27","hashOfConfig":"20"},{"size":963,"mtime":1611589770303,"results":"28","hashOfConfig":"20"},{"size":960,"mtime":1610658007544,"results":"29","hashOfConfig":"20"},{"size":943,"mtime":1610651386222,"results":"30","hashOfConfig":"20"},{"size":2204,"mtime":1607351855505,"results":"31","hashOfConfig":"20"},{"size":2357,"mtime":1611257846817,"results":"32","hashOfConfig":"20"},{"size":2333,"mtime":1611246386131,"results":"33","hashOfConfig":"20"},{"size":375,"mtime":1607351855515,"results":"34","hashOfConfig":"20"},{"size":545,"mtime":1611073080628,"results":"35","hashOfConfig":"20"},{"size":689,"mtime":1611149786989,"results":"36","hashOfConfig":"20"},{"size":861,"mtime":1611592379264,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40"},"oxmjk5",{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"51"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\_W_robocie\\Gadget\\Żabik_3\\Gadget---PR\\src\\components\\Dashboards\\Main.js",["78","79","80","81","82","83"],"import React, { useState, useEffect, useContext } from \"react\";\r\nimport Pagination from \"react-js-pagination\";\r\nimport Service from \"./Service\";\r\nimport ServiceMobile from \"./ServiceMobile\";\r\nimport ServiceHeader from \"./ServiceHeader\";\r\nimport MachineBar from \"./MachineDetails/MachineBar/MachineBar\";\r\nimport \"../Dashboards/MachineDetails/MachineDetails.css\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { useWindowSize } from \"../../Hooks\";\r\nimport { API } from \"../../utils/API\";\r\nimport { SignalRContext } from '../../utils/signalr-context'\r\nimport Logs from '../Dashboards/Logs/Logs'\r\nimport ServiceHeaderMobile from \"./ServiceHeaderMobile\";\r\n\r\n\r\nconst Dashboards = () => {\r\n  const windowSize = useWindowSize();\r\n  const { machineName } = useParams();\r\n  const [machineState, setMachineState] = useState([]);\r\n  const [services, setServices] = useState([]);\r\n  const [connectionState, setConnectionState] = useState(\"\");\r\n  const [machineAddress, setMachineAddress] = useState(\"\");\r\n  const connection = useContext(SignalRContext);\r\n\r\n  useEffect(() => {\r\n    API.fetchServicesList(machineName).then((response) => {\r\n      setServices(response.data);\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (connection !== null) {\r\n      connection.on(\"MachineHealthReceived\", (response) => {\r\n        if (response.agent === machineName) {\r\n          let updated = {};\r\n          updated.cpu = response.cpuPercentUsage;\r\n          updated.ram = Math.floor(100 * (1 - (response.memoryFree / response.memoryTotal)));\r\n          updated.disc = `${Math.floor(response.discOccupied)}/${Math.floor(response.discTotal)}`;\r\n          updated.services = `${response.servicesRunning}/${response.servicesCount}`;\r\n          setMachineState(updated);\r\n        }\r\n      });\r\n    }\r\n  }, [connection]);\r\n\r\n  useEffect(() => {\r\n    if (connection !== null && services.length > 0) {\r\n      connection.on(\"ServiceStatusChanged\", (response) => {\r\n        if (response.agent === machineName) {\r\n          let updated = [...services];\r\n          let indexOfChangedService = updated.findIndex(x => x.name.toLowerCase() === response.name.toLowerCase());\r\n          updated[indexOfChangedService].status = response.status;\r\n          setServices(updated);\r\n        }\r\n      });\r\n    }\r\n  }, [connection, services]);\r\n\r\n\r\n  useEffect(() => {\r\n    API.fetchMachineList().then((response) => {\r\n      let ipAddress = response.data.filter((ms) => ms.name == machineName)[0];\r\n      setMachineAddress(ipAddress.address);\r\n    });\r\n  }, []);\r\n\r\n  const servicesPerPage = 10;\r\n  const [activePage, setActivePage] = useState(1);\r\n\r\n  const handlePageChange = (pageNumber) => {\r\n    setActivePage(pageNumber);\r\n  };\r\n\r\n  // search bar\r\n\r\n  const [searchTerm, setSearchTerm] = useState(\"\");\r\n  const [searchResults, setSearchResults] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const results = services.filter((service) =>\r\n      service.name.toLowerCase().includes(searchTerm.toLowerCase())\r\n    );\r\n    setSearchResults(results);\r\n  }, [searchTerm, services]);\r\n\r\n\r\n  const indexOfLastService = activePage * servicesPerPage;\r\n  const indexOfFirstService = indexOfLastService - servicesPerPage;\r\n  const currentServices = searchResults.slice(\r\n    indexOfFirstService,\r\n    indexOfLastService\r\n  );\r\n  const moreResults = searchResults.length > servicesPerPage;\r\n  if (windowSize <= 768) {\r\n    return (\r\n      <>\r\n        <div>\r\n        <ServiceHeaderMobile\r\n                    setSearchTerm={setSearchTerm}\r\n                    searchTerm={searchTerm}\r\n                    setActivePage={setActivePage}\r\n                />\r\n          {currentServices && currentServices.length > 0 ? (\r\n            currentServices.map((service, index) => {\r\n              return (\r\n                \r\n                //tutaj zamienilem hubConnection na connection ale takie przekazywanie polaczenia przez propsy nie jest potrzebne, teraz mozna uzywac useContext w komponentach\r\n                <ServiceMobile \r\n                  key={index} \r\n                  service={service} \r\n                  index={index} \r\n                  machineName={machineName} \r\n                  connection={connection} \r\n                  connectionState={connectionState} \r\n                />\r\n              )\r\n            })\r\n          ) : (\r\n              <p className=\"warning-text\">No services detected</p>\r\n            )}\r\n\r\n          {moreResults && <Pagination\r\n            activePage={activePage}\r\n            itemsCountPerPage={servicesPerPage}\r\n            totalItemsCount={searchResults.length}\r\n            pageRangeDisplayed={3}\r\n            onChange={handlePageChange}\r\n            prevPageText=\"<\"\r\n            nextPageText=\">\"\r\n            firstPageText=\"..\"\r\n            lastPageText=\"..\"\r\n          />}\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <MachineBar\r\n          machine={machineName}\r\n          address={machineAddress}\r\n          cpu={machineState.cpu}\r\n          ram={machineState.ram}\r\n          disc={machineState.disc}\r\n          services={machineState.services}\r\n        ></MachineBar>\r\n      </div>\r\n      <ServiceHeader\r\n        setSearchTerm={setSearchTerm}\r\n        searchTerm={searchTerm}\r\n        setActivePage={setActivePage}\r\n      />\r\n\r\n      {currentServices && currentServices.length > 0 ? (\r\n        currentServices.map((service, index) => {\r\n          return <Service key={index} service={service} index={index} agent={machineName} />;\r\n        })\r\n      ) : (\r\n          <p className=\"warning-text\">No services detected</p>\r\n        )}\r\n\r\n      {moreResults && (\r\n        <Pagination\r\n          activePage={activePage}\r\n          itemsCountPerPage={servicesPerPage}\r\n          totalItemsCount={searchResults.length}\r\n          pageRangeDisplayed={3}\r\n          onChange={handlePageChange}\r\n          prevPageText=\"<\"\r\n          nextPageText=\">\"\r\n          firstPageText=\"..\"\r\n          lastPageText=\"..\"\r\n        />\r\n      )}\r\n      <Logs></Logs>\r\n    </div>\r\n    \r\n  );\r\n};\r\n\r\nexport default Dashboards;\r\n","D:\\_W_robocie\\Gadget\\Żabik_3\\Gadget---PR\\src\\components\\Dashboards\\Service.js",[],"D:\\_W_robocie\\Gadget\\Żabik_3\\Gadget---PR\\src\\utils\\API.js",[],"D:\\_W_robocie\\Gadget\\Żabik_3\\Gadget---PR\\src\\index.js",[],["84","85"],"D:\\_W_robocie\\Gadget\\Żabik_3\\Gadget---PR\\src\\utils\\signalr-context.js",["86","87"],"import React, { createContext, useState, useEffect } from 'react';\r\nimport { HubConnectionBuilder, LogLevel, HubConnectionState } from \"@microsoft/signalr\";\r\nimport {SIGNALR_URL} from \"../config\";\r\n\r\n\r\nconst SignalRContext = createContext(null)\r\n\r\nexport { SignalRContext }\r\n\r\nexport default ({ children }) => {\r\n    const [hubConnection, setHubConnection] = useState(null)\r\n\r\n\r\n    useEffect(() => {\r\n        const connection = new HubConnectionBuilder()\r\n            .withUrl(SIGNALR_URL)\r\n            .configureLogging(LogLevel.Critical)\r\n            .withAutomaticReconnect()\r\n            .build()\r\n\r\n        async function start() {\r\n            try {\r\n                await connection.start();\r\n                setHubConnection(connection)\r\n            } catch (err) {\r\n                console.log(err);\r\n                setTimeout(() => start(), 5000);\r\n            }\r\n        };\r\n        connection?.onclose(start);\r\n        start();\r\n    }, [])\r\n\r\n\r\n    return (\r\n        <SignalRContext.Provider value={hubConnection}>\r\n            {children}\r\n        </SignalRContext.Provider>\r\n    )\r\n}",["88","89"],"D:\\_W_robocie\\Gadget\\Żabik_3\\Gadget---PR\\src\\App.js",["90"],"D:\\_W_robocie\\Gadget\\Żabik_3\\Gadget---PR\\src\\config.js",[],"D:\\_W_robocie\\Gadget\\Żabik_3\\Gadget---PR\\src\\components\\Home\\Main.js",["91"],"D:\\_W_robocie\\Gadget\\Żabik_3\\Gadget---PR\\src\\components\\Header.js",["92"],"D:\\_W_robocie\\Gadget\\Żabik_3\\Gadget---PR\\src\\components\\Dashboards\\MachineDetails\\MachineTile\\MachineTileMobile.js",[],"D:\\_W_robocie\\Gadget\\Żabik_3\\Gadget---PR\\src\\components\\Dashboards\\MachineDetails\\MachineBar\\MachineBar.js",[],"D:\\_W_robocie\\Gadget\\Żabik_3\\Gadget---PR\\src\\components\\Dashboards\\MachineDetails\\Chart.js",[],"D:\\_W_robocie\\Gadget\\Żabik_3\\Gadget---PR\\src\\components\\Dashboards\\MachineDetails\\MachineTile\\MachineTile.js",["93","94","95"],"D:\\_W_robocie\\Gadget\\Żabik_3\\Gadget---PR\\src\\components\\Dashboards\\Logs\\Logs.js",[],"D:\\_W_robocie\\Gadget\\Żabik_3\\Gadget---PR\\src\\reportWebVitals.js",[],"D:\\_W_robocie\\Gadget\\Żabik_3\\Gadget---PR\\src\\components\\Dashboards\\ServiceHeaderMobile.js",[],"D:\\_W_robocie\\Gadget\\Żabik_3\\Gadget---PR\\src\\components\\Dashboards\\RestartModal.js",[],"D:\\_W_robocie\\Gadget\\Żabik_3\\Gadget---PR\\src\\components\\LoginModal.js",["96"],{"ruleId":"97","severity":1,"message":"98","line":21,"column":27,"nodeType":"99","messageId":"100","endLine":21,"endColumn":45},{"ruleId":"101","severity":1,"message":"102","line":29,"column":6,"nodeType":"103","endLine":29,"endColumn":8,"suggestions":"104"},{"ruleId":"101","severity":1,"message":"102","line":44,"column":6,"nodeType":"103","endLine":44,"endColumn":18,"suggestions":"105"},{"ruleId":"101","severity":1,"message":"102","line":57,"column":6,"nodeType":"103","endLine":57,"endColumn":28,"suggestions":"106"},{"ruleId":"107","severity":1,"message":"108","line":62,"column":60,"nodeType":"109","messageId":"110","endLine":62,"endColumn":62},{"ruleId":"101","severity":1,"message":"102","line":65,"column":6,"nodeType":"103","endLine":65,"endColumn":8,"suggestions":"111"},{"ruleId":"112","replacedBy":"113"},{"ruleId":"114","replacedBy":"115"},{"ruleId":"97","severity":1,"message":"116","line":2,"column":42,"nodeType":"99","messageId":"100","endLine":2,"endColumn":60},{"ruleId":"117","severity":1,"message":"118","line":10,"column":1,"nodeType":"119","endLine":40,"endColumn":2},{"ruleId":"112","replacedBy":"120"},{"ruleId":"114","replacedBy":"121"},{"ruleId":"97","severity":1,"message":"122","line":1,"column":25,"nodeType":"99","messageId":"100","endLine":1,"endColumn":31},{"ruleId":"107","severity":1,"message":"108","line":36,"column":61,"nodeType":"109","messageId":"110","endLine":36,"endColumn":63},{"ruleId":"123","severity":1,"message":"124","line":17,"column":17,"nodeType":"125","endLine":17,"endColumn":49},{"ruleId":"101","severity":1,"message":"126","line":30,"column":7,"nodeType":"103","endLine":30,"endColumn":14,"suggestions":"127"},{"ruleId":"97","severity":1,"message":"128","line":37,"column":13,"nodeType":"99","messageId":"100","endLine":37,"endColumn":16},{"ruleId":"123","severity":1,"message":"124","line":72,"column":13,"nodeType":"125","endLine":72,"endColumn":47},{"ruleId":"123","severity":1,"message":"124","line":9,"column":25,"nodeType":"125","endLine":9,"endColumn":95},"no-unused-vars","'setConnectionState' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'machineName'. Either include it or remove the dependency array.","ArrayExpression",["129"],["130"],["131"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",["132"],"no-native-reassign",["133"],"no-negated-in-lhs",["134"],"'HubConnectionState' is defined but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration",["133"],["134"],"'Switch' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","React Hook useEffect has a missing dependency: 'machineTileState.show'. Either include it or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setMachineTileState' needs the current value of 'machineTileState.show'.",["135"],"'ref' is assigned a value but never used.",{"desc":"136","fix":"137"},{"desc":"138","fix":"139"},{"desc":"140","fix":"141"},{"desc":"136","fix":"142"},"no-global-assign","no-unsafe-negation",{"desc":"143","fix":"144"},"Update the dependencies array to be: [machineName]",{"range":"145","text":"146"},"Update the dependencies array to be: [connection, machineName]",{"range":"147","text":"148"},"Update the dependencies array to be: [connection, machineName, services]",{"range":"149","text":"150"},{"range":"151","text":"146"},"Update the dependencies array to be: [machineTileState.show, props]",{"range":"152","text":"153"},[1184,1186],"[machineName]",[1787,1799],"[connection, machineName]",[2281,2303],"[connection, machineName, services]",[2520,2522],[884,891],"[machineTileState.show, props]"]